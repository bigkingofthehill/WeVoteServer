# Generated by Django 3.2.13 on 2022-06-10 23:54

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Voter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('we_vote_id', models.CharField(blank=True, db_index=True, max_length=255, null=True, unique=True, verbose_name='we vote permanent id')),
                ('linked_organization_we_vote_id', models.CharField(blank=True, max_length=255, null=True, unique=True, verbose_name='we vote id for linked organization')),
                ('email', models.EmailField(blank=True, max_length=255, null=True, unique=True, verbose_name='email address')),
                ('primary_email_we_vote_id', models.CharField(blank=True, max_length=255, null=True, unique=True, verbose_name='we vote id for primary email for this voter')),
                ('email_ownership_is_verified', models.BooleanField(default=False)),
                ('normalized_sms_phone_number', models.CharField(blank=True, max_length=50, null=True)),
                ('primary_sms_we_vote_id', models.CharField(blank=True, max_length=255, null=True, unique=True, verbose_name='we vote id for primary phone number')),
                ('sms_ownership_is_verified', models.BooleanField(default=False)),
                ('first_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='first name')),
                ('middle_name', models.CharField(blank=True, max_length=255, null=True)),
                ('last_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='last name')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('date_last_changed', models.DateTimeField(auto_now=True, null=True, verbose_name='date last changed')),
                ('state_code_for_display', models.CharField(blank=True, max_length=2, null=True)),
                ('state_code_for_display_hidden', models.BooleanField(default=False)),
                ('state_code_for_display_updated', models.BooleanField(default=False)),
                ('data_to_preserve', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_analytics_admin', models.BooleanField(default=False)),
                ('is_partner_organization', models.BooleanField(default=False)),
                ('is_political_data_manager', models.BooleanField(default=False)),
                ('is_political_data_viewer', models.BooleanField(default=False)),
                ('is_verified_volunteer', models.BooleanField(default=False)),
                ('facebook_id', models.BigIntegerField(blank=True, null=True, verbose_name='facebook big integer id')),
                ('facebook_email', models.EmailField(blank=True, max_length=255, null=True, verbose_name='facebook email address')),
                ('fb_username', models.CharField(max_length=50, null=True, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z]*$', message='Only alphanumeric characters are allowed.')])),
                ('facebook_profile_image_url_https', models.TextField(blank=True, null=True, verbose_name='url of image from facebook')),
                ('twitter_id', models.BigIntegerField(blank=True, null=True, verbose_name='twitter big integer id')),
                ('twitter_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='display name from twitter')),
                ('twitter_screen_name', models.CharField(max_length=255, null=True, verbose_name='twitter screen name / handle')),
                ('twitter_profile_image_url_https', models.TextField(blank=True, null=True, verbose_name='url of logo from twitter')),
                ('we_vote_hosted_profile_image_url_large', models.TextField(blank=True, null=True)),
                ('we_vote_hosted_profile_image_url_medium', models.TextField(blank=True, null=True)),
                ('we_vote_hosted_profile_image_url_tiny', models.TextField(blank=True, null=True)),
                ('profile_image_type_currently_active', models.CharField(choices=[('FACEBOOK', 'Facebook'), ('TWITTER', 'Twitter'), ('UNKNOWN', 'Unknown'), ('UPLOADED', 'Uploaded')], default='UNKNOWN', max_length=10)),
                ('we_vote_hosted_profile_facebook_image_url_large', models.TextField(blank=True, null=True)),
                ('we_vote_hosted_profile_facebook_image_url_medium', models.TextField(blank=True, null=True)),
                ('we_vote_hosted_profile_facebook_image_url_tiny', models.TextField(blank=True, null=True)),
                ('we_vote_hosted_profile_twitter_image_url_large', models.TextField(blank=True, null=True)),
                ('we_vote_hosted_profile_twitter_image_url_medium', models.TextField(blank=True, null=True)),
                ('we_vote_hosted_profile_twitter_image_url_tiny', models.TextField(blank=True, null=True)),
                ('we_vote_hosted_profile_uploaded_image_url_large', models.TextField(blank=True, null=True)),
                ('we_vote_hosted_profile_uploaded_image_url_medium', models.TextField(blank=True, null=True)),
                ('we_vote_hosted_profile_uploaded_image_url_tiny', models.TextField(blank=True, null=True)),
                ('twitter_request_token', models.TextField(blank=True, null=True, verbose_name='twitter request token')),
                ('twitter_request_secret', models.TextField(blank=True, null=True, verbose_name='twitter request secret')),
                ('twitter_access_token', models.TextField(blank=True, null=True, verbose_name='twitter access token')),
                ('twitter_access_secret', models.TextField(blank=True, null=True, verbose_name='twitter access secret')),
                ('twitter_connection_active', models.BooleanField(default=False)),
                ('notification_settings_flags', models.PositiveIntegerField(default=1451)),
                ('interface_status_flags', models.PositiveIntegerField(default=0, verbose_name='interface status flags')),
                ('maintenance_status_flags', models.PositiveIntegerField(default=3)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ContactEmailAugmented',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('checked_against_open_people', models.BooleanField(db_index=True, default=False)),
                ('checked_against_sendgrid', models.BooleanField(db_index=True, default=False)),
                ('checked_against_snovio', models.BooleanField(db_index=True, default=False)),
                ('checked_against_targetsmart', models.BooleanField(db_index=True, default=False)),
                ('date_last_checked_against_open_people', models.DateTimeField(null=True)),
                ('date_last_checked_against_sendgrid', models.DateTimeField(null=True)),
                ('date_last_checked_against_snovio', models.DateTimeField(null=True)),
                ('date_last_checked_against_targetsmart', models.DateTimeField(null=True)),
                ('email_address_text', models.TextField(db_index=True, unique=True)),
                ('has_known_bounces', models.BooleanField(default=False)),
                ('has_mx_or_a_record', models.BooleanField(default=False)),
                ('has_suspected_bounces', models.BooleanField(default=False)),
                ('is_invalid', models.BooleanField(db_index=True, default=False)),
                ('is_verified', models.BooleanField(db_index=True, default=False)),
                ('open_people_first_name', models.CharField(max_length=255, null=True)),
                ('open_people_last_name', models.CharField(max_length=255, null=True)),
                ('open_people_middle_name', models.CharField(max_length=255, null=True)),
                ('open_people_city', models.CharField(max_length=255, null=True)),
                ('open_people_state_code', models.CharField(max_length=2, null=True)),
                ('open_people_zip_code', models.CharField(max_length=10, null=True)),
                ('snovio_id', models.CharField(max_length=255, null=True)),
                ('snovio_locality', models.CharField(max_length=255, null=True)),
                ('snovio_source_state', models.CharField(max_length=2, null=True)),
                ('targetsmart_id', models.CharField(max_length=255, null=True)),
                ('targetsmart_source_state', models.CharField(max_length=2, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ContactSMSAugmented',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('checked_against_open_people', models.BooleanField(db_index=True, default=False)),
                ('checked_against_sendgrid', models.BooleanField(db_index=True, default=False)),
                ('checked_against_targetsmart', models.BooleanField(db_index=True, default=False)),
                ('date_last_checked_against_open_people', models.DateTimeField(null=True)),
                ('date_last_checked_against_sendgrid', models.DateTimeField(null=True)),
                ('date_last_checked_against_targetsmart', models.DateTimeField(null=True)),
                ('is_augmented', models.BooleanField(db_index=True, default=False)),
                ('is_invalid', models.BooleanField(db_index=True, default=False)),
                ('is_verified', models.BooleanField(db_index=True, default=False)),
                ('normalized_sms_phone_number', models.CharField(db_index=True, max_length=50, unique=True)),
                ('open_people_city', models.CharField(max_length=255, null=True)),
                ('open_people_state_code', models.CharField(max_length=2, null=True)),
                ('open_people_zip_code', models.CharField(max_length=10, null=True)),
                ('snovio_id', models.CharField(max_length=255, null=True)),
                ('snovio_locality', models.CharField(max_length=255, null=True)),
                ('snovio_source_state', models.CharField(max_length=2, null=True)),
                ('targetsmart_id', models.CharField(max_length=255, null=True)),
                ('targetsmart_source_state', models.CharField(max_length=2, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='VoterAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('voter_id', models.BigIntegerField(db_index=True, verbose_name='voter unique identifier')),
                ('address_type', models.CharField(choices=[('B', 'Address Where Registered to Vote'), ('M', 'Mailing Address'), ('F', 'Prior Address')], default='B', max_length=1, verbose_name='type of address')),
                ('text_for_map_search', models.CharField(max_length=255, verbose_name='address as entered')),
                ('latitude', models.CharField(blank=True, max_length=255, null=True, verbose_name='latitude returned from Google')),
                ('longitude', models.CharField(blank=True, max_length=255, null=True, verbose_name='longitude returned from Google')),
                ('normalized_line1', models.CharField(blank=True, max_length=255, null=True, verbose_name='normalized address line 1 returned from Google')),
                ('normalized_line2', models.CharField(blank=True, max_length=255, null=True, verbose_name='normalized address line 2 returned from Google')),
                ('normalized_city', models.CharField(blank=True, max_length=255, null=True, verbose_name='normalized city returned from Google')),
                ('normalized_state', models.CharField(blank=True, max_length=255, null=True, verbose_name='normalized state returned from Google')),
                ('normalized_zip', models.CharField(blank=True, max_length=255, null=True, verbose_name='normalized zip returned from Google')),
                ('google_civic_election_id', models.PositiveIntegerField(null=True, verbose_name='google civic election id for this address')),
                ('election_day_text', models.CharField(blank=True, max_length=255, null=True, verbose_name='election day')),
                ('ballot_location_display_name', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='display name of ballot voter is viewing')),
                ('ballot_returned_we_vote_id', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='we vote id of the ballot')),
                ('refreshed_from_google', models.BooleanField(db_index=True, default=False, verbose_name='have normalized fields been updated from Google since address change?')),
                ('voter_entered_address', models.BooleanField(default=False, verbose_name='Did the voter manually enter an address?')),
                ('date_last_changed', models.DateTimeField(auto_now=True, null=True, verbose_name='date last changed')),
            ],
        ),
        migrations.CreateModel(
            name='VoterChangeLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('voter_we_vote_id', models.CharField(db_index=True, max_length=255, null=True)),
                ('date_of_change', models.DateTimeField(auto_now=True, null=True)),
                ('change_table', models.CharField(choices=[('EmailAddress', 'EmailAddress'), ('VoterAddress', 'VoterAddress'), ('Voter', 'Voter')], default='Voter', max_length=50)),
                ('change_field', models.CharField(max_length=255, null=True)),
                ('change_description', models.CharField(max_length=255, null=True)),
                ('is_system_update', models.BooleanField(default=False)),
                ('value_type', models.CharField(choices=[('B', 'Boolean'), ('I', 'Integer'), ('S', 'String'), ('T', 'Text')], default='S', max_length=1, verbose_name='value_type')),
                ('text_value_from', models.TextField(null=True)),
                ('text_value_to', models.TextField(null=True)),
                ('string_value_from', models.CharField(max_length=255, null=True)),
                ('string_value_to', models.CharField(max_length=255, null=True)),
                ('integer_value_from', models.BigIntegerField(null=True)),
                ('integer_value_to', models.BigIntegerField(null=True)),
                ('boolean_value_from', models.BooleanField(default=None, null=True)),
                ('boolean_value_to', models.BooleanField(default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='VoterContactEmail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(default=None, max_length=255, null=True)),
                ('date_last_changed', models.DateTimeField(auto_now=True, db_index=True, null=True)),
                ('display_name', models.CharField(default=None, max_length=255, null=True)),
                ('email_address_text', models.TextField(blank=True, db_index=True, null=True)),
                ('first_name', models.CharField(default=None, max_length=255, null=True)),
                ('google_contact_id', models.CharField(db_index=True, default=None, max_length=255, null=True)),
                ('google_date_last_updated', models.DateTimeField(null=True)),
                ('google_display_name', models.CharField(default=None, max_length=255, null=True)),
                ('google_first_name', models.CharField(default=None, max_length=255, null=True)),
                ('google_last_name', models.CharField(default=None, max_length=255, null=True)),
                ('has_data_from_google_people_api', models.BooleanField(default=False)),
                ('ignore_contact', models.BooleanField(default=False)),
                ('imported_by_voter_we_vote_id', models.CharField(db_index=True, default=None, max_length=255, null=True)),
                ('last_name', models.CharField(default=None, max_length=255, null=True)),
                ('middle_name', models.CharField(default=None, max_length=255, null=True)),
                ('state_code', models.CharField(db_index=True, default=None, max_length=2, null=True)),
                ('voter_we_vote_id', models.CharField(db_index=True, default=None, max_length=255, null=True)),
                ('we_vote_hosted_profile_image_url_medium', models.TextField(blank=True, null=True)),
                ('zip_code', models.CharField(default=None, max_length=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='VoterDeviceLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('voter_device_id', models.CharField(max_length=255, unique=True, verbose_name='voter device id')),
                ('voter_id', models.BigIntegerField(verbose_name='voter unique identifier')),
                ('google_civic_election_id', models.PositiveIntegerField(default=0, verbose_name='google civic election id')),
                ('state_code', models.CharField(max_length=255, null=True, verbose_name='us state the device is most recently active in')),
                ('date_last_changed', models.DateTimeField(auto_now=True, null=True, verbose_name='date last changed')),
                ('date_election_last_changed', models.DateTimeField(null=True)),
                ('secret_code', models.CharField(max_length=6, null=True, verbose_name='single use secret code tied to this device')),
                ('email_secret_key', models.CharField(blank=True, max_length=255, null=True, unique=True, verbose_name='secret key to verify ownership of email')),
                ('sms_secret_key', models.CharField(blank=True, max_length=255, null=True, unique=True, verbose_name='secret key to verify ownership of sms')),
                ('date_secret_code_generated', models.DateTimeField(null=True)),
                ('secret_code_number_of_failed_tries_for_this_code', models.PositiveIntegerField(null=True)),
                ('secret_code_number_of_failed_tries_all_time', models.PositiveIntegerField(null=True)),
                ('platform_type', models.CharField(blank=True, max_length=32, null=True, verbose_name='Platform type string {IOS, ANDROID, WEBAPP}')),
                ('firebase_fcm_token', models.CharField(blank=True, max_length=255, null=True, verbose_name='the Firebase Cloud Messaging (FCW) token for this device')),
            ],
        ),
        migrations.CreateModel(
            name='VoterPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('google_civic_election_id', models.PositiveIntegerField(db_index=True, default=None, null=True, verbose_name='google civic election id')),
                ('state_code', models.CharField(max_length=2, null=True, verbose_name='us state code')),
                ('voter_display_name', models.CharField(default=None, max_length=255, null=True)),
                ('voter_display_city_state', models.CharField(default=None, max_length=255, null=True)),
                ('voter_we_vote_id', models.CharField(db_index=True, default=None, max_length=255, null=True)),
                ('voter_plan_data_serialized', models.TextField(blank=True, null=True)),
                ('voter_plan_text', models.TextField(blank=True, null=True)),
                ('show_to_public', models.BooleanField(default=False)),
                ('date_entered', models.DateTimeField(auto_now_add=True, db_index=True, null=True, verbose_name='date entered')),
                ('date_last_changed', models.DateTimeField(auto_now=True, db_index=True, null=True, verbose_name='date last changed')),
            ],
        ),
    ]
