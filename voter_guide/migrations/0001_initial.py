# Generated by Django 3.2.13 on 2022-06-10 23:54

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='VoterGuide',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('we_vote_id', models.CharField(blank=True, db_index=True, max_length=255, null=True, unique=True, verbose_name='we vote permanent id')),
                ('organization_we_vote_id', models.CharField(blank=True, db_index=True, max_length=255, null=True, verbose_name='organization we vote id')),
                ('voter_we_vote_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='voter who owns the organization')),
                ('public_figure_we_vote_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='public figure we vote id')),
                ('owner_we_vote_id', models.CharField(blank=True, max_length=255, null=True, verbose_name="individual voter's we vote id")),
                ('owner_voter_id', models.PositiveIntegerField(default=0, null=True, verbose_name='the unique voter id of the voter who this guide is about')),
                ('google_civic_election_id', models.PositiveIntegerField(db_index=True, null=True, verbose_name='google civic election id')),
                ('election_day_text', models.CharField(blank=True, max_length=255, null=True, verbose_name='election day')),
                ('state_code', models.CharField(max_length=2, null=True, verbose_name='state the voter_guide is related to')),
                ('vote_smart_time_span', models.CharField(blank=True, db_index=True, max_length=255, null=True, verbose_name='the period in which the organization stated this position')),
                ('display_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='display title for this voter guide')),
                ('image_url', models.TextField(blank=True, null=True, verbose_name='image url of logo/photo associated with voter guide')),
                ('we_vote_hosted_profile_image_url_large', models.TextField(blank=True, null=True, verbose_name='large version image url of logo/photo associated with voter guide')),
                ('we_vote_hosted_profile_image_url_medium', models.TextField(blank=True, null=True, verbose_name='medium version image url of logo/photo associated with voter guide')),
                ('we_vote_hosted_profile_image_url_tiny', models.TextField(blank=True, null=True, verbose_name='tiny version image url of logo/photo associated with voter guide')),
                ('voter_guide_owner_type', models.CharField(choices=[('C', 'Corporation'), ('G', 'Group'), ('I', 'Individual'), ('NW', 'News Corporation'), ('NP', 'Nonpartisan'), ('C3', 'Nonprofit 501c3'), ('C4', 'Nonprofit 501c4'), ('P', 'Political Action Committee'), ('PF', 'Public Figure'), ('TA', 'Trade Association or Union'), ('U', 'Unknown Type'), ('O', 'Group - Organization')], default='U', max_length=2, verbose_name='is owner org, public figure, or voter?')),
                ('twitter_handle', models.CharField(max_length=255, null=True, verbose_name='twitter screen_name')),
                ('twitter_description', models.CharField(blank=True, max_length=255, null=True, verbose_name='Text description of this organization from twitter.')),
                ('twitter_followers_count', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='number of twitter followers')),
                ('pledge_goal', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='target number of voters for pledge drive')),
                ('pledge_count', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='number of voters who have pledged')),
                ('vote_smart_ratings_only', models.BooleanField(default=False)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True, verbose_name='date last changed')),
            ],
            options={
                'ordering': ('last_updated',),
            },
        ),
        migrations.CreateModel(
            name='VoterGuidePossibility',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('voter_guide_possibility_url', models.TextField(blank=True, null=True, verbose_name='url of possible voter guide')),
                ('voter_guide_possibility_pdf_url', models.TextField(blank=True, null=True, verbose_name='url of possible voter guide which is a PDF')),
                ('organization_we_vote_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='organization we vote id')),
                ('candidate_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='candidate name')),
                ('candidate_twitter_handle', models.CharField(blank=True, max_length=255, null=True, verbose_name='candidate twitter handle')),
                ('candidate_we_vote_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='candidate we vote id')),
                ('voter_who_submitted_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='voter name who submitted this')),
                ('voter_who_submitted_we_vote_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='voter we vote id who submitted this')),
                ('assigned_to_name', models.CharField(blank=True, max_length=255, null=True)),
                ('assigned_to_voter_we_vote_id', models.CharField(blank=True, max_length=255, null=True)),
                ('state_code', models.CharField(max_length=2, null=True, verbose_name='state the voter guide is related to')),
                ('voter_guide_owner_type', models.CharField(choices=[('C', 'Corporation'), ('G', 'Group'), ('I', 'Individual'), ('NW', 'News Corporation'), ('NP', 'Nonpartisan'), ('C3', 'Nonprofit 501c3'), ('C4', 'Nonprofit 501c4'), ('P', 'Political Action Committee'), ('PF', 'Public Figure'), ('TA', 'Trade Association or Union'), ('U', 'Unknown Type'), ('O', 'Group - Organization')], default='U', max_length=2, verbose_name='is owner org, public figure, or voter?')),
                ('voter_guide_possibility_type', models.CharField(choices=[('ORG', 'Organization or News Website Endorsing Candidates'), ('CAND', 'List of Endorsements for One Candidate'), ('UNKNOWN', 'List of Endorsements for One Candidate')], default='UNKNOWN', max_length=7)),
                ('organization_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='organization name')),
                ('organization_twitter_handle', models.CharField(blank=True, max_length=255, null=True, verbose_name='organization twitter handle')),
                ('organization_twitter_followers_count', models.PositiveIntegerField(blank=True, default=0)),
                ('ballot_items_raw', models.TextField(blank=True, null=True)),
                ('contributor_comments', models.TextField(blank=True, default=None, null=True)),
                ('contributor_email', models.TextField(blank=True, default=None, null=True)),
                ('target_google_civic_election_id', models.PositiveIntegerField(null=True)),
                ('candidates_missing_from_we_vote', models.BooleanField(default=False)),
                ('cannot_find_endorsements', models.BooleanField(default=False)),
                ('capture_detailed_comments', models.BooleanField(default=False)),
                ('from_prior_election', models.BooleanField(default=False)),
                ('ignore_stored_positions', models.BooleanField(default=False)),
                ('ignore_this_source', models.BooleanField(default=False)),
                ('hide_from_active_review', models.BooleanField(default=False)),
                ('batch_header_id', models.PositiveIntegerField(null=True)),
                ('internal_notes', models.TextField(blank=True, default=None, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('date_last_changed', models.DateTimeField(auto_now=True, null=True, verbose_name='date last changed')),
            ],
            options={
                'ordering': ('date_last_changed',),
            },
        ),
        migrations.CreateModel(
            name='VoterGuidePossibilityPosition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('voter_guide_possibility_parent_id', models.PositiveIntegerField(db_index=True, null=True)),
                ('possibility_position_number', models.PositiveIntegerField(db_index=True, null=True)),
                ('ballot_item_name', models.CharField(max_length=255, null=True)),
                ('candidate_we_vote_id', models.CharField(max_length=255, null=True)),
                ('candidate_twitter_handle', models.CharField(max_length=255, null=True)),
                ('organization_name', models.CharField(max_length=255, null=True)),
                ('organization_twitter_handle', models.CharField(max_length=255, null=True)),
                ('organization_we_vote_id', models.CharField(max_length=255, null=True)),
                ('position_we_vote_id', models.CharField(max_length=255, null=True)),
                ('measure_we_vote_id', models.CharField(max_length=255, null=True)),
                ('statement_text', models.TextField(blank=True, null=True)),
                ('google_civic_election_id', models.PositiveIntegerField(null=True)),
                ('position_stance', models.CharField(choices=[('SUPPORT', 'Supports'), ('NO_STANCE', 'No stance'), ('OPPOSE', 'Opposes')], default='SUPPORT', max_length=15)),
                ('more_info_url', models.TextField(blank=True, null=True, verbose_name='url with more info about this position')),
                ('possibility_should_be_ignored', models.BooleanField(default=False, verbose_name='Soft delete. Stop analyzing this entry.')),
                ('position_should_be_removed', models.BooleanField(default=False, verbose_name='Delete saved position from PositionEntered.')),
            ],
        ),
    ]
