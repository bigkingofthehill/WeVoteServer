# Generated by Django 3.2.13 on 2022-06-10 23:54

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('we_vote_id', models.CharField(blank=True, db_index=True, max_length=255, null=True, unique=True, verbose_name='we vote permanent id')),
                ('organization_name', models.CharField(max_length=255, verbose_name='organization name')),
                ('most_recent_name_update_from_voter_first_and_last', models.BooleanField(default=False)),
                ('organization_website', models.URLField(blank=True, max_length=255, null=True, verbose_name='url of the endorsing organization')),
                ('organization_email', models.EmailField(blank=True, max_length=255, null=True, verbose_name='organization contact email address')),
                ('organization_contact_form_url', models.URLField(blank=True, max_length=255, null=True, verbose_name='url of the contact us form')),
                ('organization_contact_name', models.CharField(max_length=255, null=True)),
                ('organization_facebook', models.URLField(blank=True, null=True, verbose_name='url of facebook page')),
                ('organization_image', models.CharField(max_length=255, null=True, verbose_name='organization image')),
                ('state_served_code', models.CharField(blank=True, max_length=2, null=True, verbose_name='state this organization serves')),
                ('vote_smart_id', models.BigIntegerField(blank=True, null=True, unique=True, verbose_name='vote smart special interest group id')),
                ('organization_description', models.TextField(blank=True, null=True, verbose_name='Text description of this organization.')),
                ('organization_address', models.CharField(blank=True, max_length=255, null=True, verbose_name='organization street address')),
                ('organization_city', models.CharField(blank=True, max_length=255, null=True)),
                ('organization_state', models.CharField(blank=True, max_length=2, null=True)),
                ('organization_zip', models.CharField(blank=True, max_length=255, null=True)),
                ('organization_phone1', models.CharField(blank=True, max_length=255, null=True)),
                ('organization_phone2', models.CharField(blank=True, max_length=255, null=True)),
                ('organization_fax', models.CharField(blank=True, max_length=255, null=True)),
                ('facebook_id', models.BigIntegerField(blank=True, null=True, verbose_name='facebook big integer id')),
                ('facebook_email', models.EmailField(blank=True, max_length=255, null=True, verbose_name='facebook email address')),
                ('fb_username', models.CharField(max_length=50, null=True, unique=True, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z]*$', message='Only alphanumeric characters are allowed.')])),
                ('facebook_profile_image_url_https', models.TextField(blank=True, null=True, verbose_name='url of image from facebook')),
                ('facebook_background_image_url_https', models.TextField(blank=True, null=True, verbose_name='url of cover image from facebook')),
                ('twitter_user_id', models.BigIntegerField(blank=True, null=True, verbose_name='twitter id')),
                ('organization_twitter_handle', models.CharField(max_length=255, null=True, verbose_name='organization twitter screen_name')),
                ('organization_twitter_updates_failing', models.BooleanField(default=False)),
                ('twitter_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='org name from twitter')),
                ('twitter_location', models.CharField(blank=True, max_length=255, null=True, verbose_name='org location from twitter')),
                ('twitter_followers_count', models.IntegerField(blank=True, default=0, verbose_name='number of twitter followers')),
                ('twitter_profile_image_url_https', models.TextField(blank=True, null=True, verbose_name='url of user logo from twitter')),
                ('twitter_profile_background_image_url_https', models.TextField(blank=True, null=True, verbose_name='tile-able background from twitter')),
                ('twitter_profile_banner_url_https', models.TextField(blank=True, null=True, verbose_name='profile banner image from twitter')),
                ('twitter_description', models.CharField(blank=True, max_length=255, null=True, verbose_name='Text description of this organization from twitter.')),
                ('organization_instagram_handle', models.CharField(max_length=255, null=True, verbose_name='organization instagram screen_name')),
                ('we_vote_hosted_profile_image_url_large', models.TextField(blank=True, null=True, verbose_name='we vote hosted large image url')),
                ('we_vote_hosted_profile_image_url_medium', models.TextField(blank=True, null=True, verbose_name='we vote hosted medium image url')),
                ('we_vote_hosted_profile_image_url_tiny', models.TextField(blank=True, null=True, verbose_name='we vote hosted tiny image url')),
                ('wikipedia_page_id', models.BigIntegerField(blank=True, null=True, verbose_name='pageid')),
                ('wikipedia_page_title', models.CharField(blank=True, max_length=255, null=True, verbose_name='Page title on Wikipedia')),
                ('wikipedia_thumbnail_url', models.TextField(blank=True, null=True, verbose_name='url of wikipedia logo thumbnail')),
                ('wikipedia_thumbnail_width', models.IntegerField(blank=True, null=True, verbose_name='width of photo')),
                ('wikipedia_thumbnail_height', models.IntegerField(blank=True, null=True, verbose_name='height of photo')),
                ('wikipedia_photo_url', models.TextField(blank=True, null=True, verbose_name='url of wikipedia logo')),
                ('ballotpedia_page_title', models.CharField(blank=True, max_length=255, null=True, verbose_name='Page title on Ballotpedia')),
                ('ballotpedia_photo_url', models.TextField(blank=True, null=True, verbose_name='url of ballotpedia logo')),
                ('issue_analysis_done', models.BooleanField(default=False)),
                ('issue_analysis_admin_notes', models.TextField(blank=True, null=True, verbose_name='we vote admin notes')),
                ('organization_type', models.CharField(choices=[('C', 'Corporation'), ('G', 'Group'), ('I', 'Individual'), ('NW', 'News Corporation'), ('NP', 'Nonpartisan'), ('C3', 'Nonprofit 501c3'), ('C4', 'Nonprofit 501c4'), ('P', 'Political Action Committee'), ('PF', 'Public Figure'), ('TA', 'Trade Association or Union'), ('U', 'Unknown Type'), ('O', 'Group - Organization')], default='U', max_length=2, verbose_name='type of org')),
                ('date_last_changed', models.DateTimeField(auto_now=True, null=True)),
                ('chosen_about_organization_external_url', models.TextField(blank=True, null=True)),
                ('chosen_domain_type_is_campaign', models.BooleanField(default=False)),
                ('chosen_domain_string', models.CharField(blank=True, max_length=255, null=True, verbose_name='client domain name for we vote site')),
                ('chosen_favicon_url_https', models.TextField(blank=True, null=True, verbose_name='url of client favicon')),
                ('chosen_google_analytics_tracking_id', models.CharField(blank=True, max_length=255, null=True)),
                ('chosen_html_verification_string', models.CharField(blank=True, max_length=255, null=True)),
                ('chosen_hide_we_vote_logo', models.BooleanField(default=False)),
                ('chosen_logo_url_https', models.TextField(blank=True, null=True, verbose_name='url of client logo')),
                ('chosen_organization_api_pass_code', models.TextField(blank=True, null=True)),
                ('chosen_prevent_sharing_opinions', models.BooleanField(default=False)),
                ('chosen_ready_introduction_title', models.CharField(blank=True, max_length=255, null=True)),
                ('chosen_ready_introduction_text', models.TextField(blank=True, null=True)),
                ('chosen_social_share_description', models.TextField(blank=True, null=True)),
                ('chosen_social_share_master_image_url_https', models.TextField(blank=True, null=True, verbose_name='url of client social share master image')),
                ('chosen_social_share_image_256x256_url_https', models.TextField(blank=True, null=True, verbose_name='url of client social share image')),
                ('chosen_subdomain_string', models.CharField(blank=True, max_length=255, null=True, verbose_name='client we vote subdomain')),
                ('chosen_subscription_plan', models.PositiveIntegerField(default=0, verbose_name='number of the plan client chose')),
                ('chosen_website_name', models.CharField(blank=True, max_length=255, null=True)),
                ('subscription_plan_end_day_text', models.CharField(blank=True, max_length=8, null=True, verbose_name='paid through day')),
                ('subscription_plan_features_active', models.PositiveIntegerField(default=0, verbose_name='features that are active')),
                ('chosen_feature_package', models.CharField(blank=True, max_length=255, null=True, verbose_name='plan type {FREE, PROFESSIONAL, ENTERPRISE} that is referred to in MasterFeaturePackage')),
                ('features_provided_bitmap', models.PositiveIntegerField(default=0, verbose_name='features that are active')),
                ('organization_endorsements_api_url', models.TextField(blank=True, null=True, verbose_name='endorsements importer url')),
            ],
            options={
                'ordering': ('organization_name',),
            },
        ),
        migrations.CreateModel(
            name='OrganizationLinkToHashtag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organization_we_vote_id', models.CharField(max_length=255, verbose_name='we vote permanent id')),
                ('hashtag_text', models.CharField(max_length=255, verbose_name='hashtag text')),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationLinkToWordOrPhrase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organization_we_vote_id', models.CharField(max_length=255, unique=True, verbose_name='we vote permanent id')),
                ('word_or_phrase_text', models.CharField(max_length=255, verbose_name='text of a word or phrase')),
                ('tweet_id', models.BigIntegerField(unique=True, verbose_name='tweet id')),
                ('published_datetime', models.DateTimeField(verbose_name='published datetime')),
                ('organization_twitter_handle', models.CharField(max_length=15, verbose_name='organization twitter handle')),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationMembershipLinkToVoter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organization_we_vote_id', models.CharField(max_length=255, verbose_name='we vote id for organization')),
                ('voter_we_vote_id', models.CharField(max_length=255, verbose_name='we vote id for the voter owner')),
                ('external_voter_id', models.CharField(max_length=255, verbose_name='id for the voter in other system')),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationReservedDomain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organization_we_vote_id', models.CharField(max_length=255, null=True)),
                ('full_domain_string', models.CharField(blank=True, max_length=255, null=True, unique=True, verbose_name='full domain')),
                ('subdomain_string', models.CharField(blank=True, max_length=255, null=True, unique=True, verbose_name='we vote subdomain')),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationTeamMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organization_we_vote_id', models.CharField(blank=True, max_length=255, null=True)),
                ('can_edit_campaignx_owned_by_organization', models.BooleanField(default=True)),
                ('can_edit_organization', models.BooleanField(default=True)),
                ('can_manage_team_members', models.BooleanField(default=False)),
                ('can_moderate_campaignx_owned_by_organization', models.BooleanField(default=True)),
                ('can_send_updates_for_campaignx_owned_by_organization', models.BooleanField(default=False)),
                ('team_member_name', models.CharField(max_length=255)),
                ('team_member_organization_we_vote_id', models.CharField(blank=True, max_length=255, null=True)),
                ('voter_we_vote_id', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('we_vote_hosted_profile_image_url_tiny', models.TextField(blank=True, null=True)),
                ('date_last_changed', models.DateTimeField(auto_now=True, db_index=True, null=True, verbose_name='date last changed')),
            ],
        ),
    ]
