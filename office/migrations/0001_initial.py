# Generated by Django 3.2.13 on 2022-06-10 23:54

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ContestOffice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('we_vote_id', models.CharField(blank=True, db_index=True, default=None, max_length=255, null=True, unique=True, verbose_name='we vote permanent id for this contest office')),
                ('office_name', models.CharField(max_length=255, verbose_name='name of the office')),
                ('date_last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('google_civic_office_name', models.CharField(max_length=255, null=True, verbose_name='office name exactly as received from google civic')),
                ('google_civic_office_name2', models.CharField(max_length=255, null=True, verbose_name='office name exactly as received from google civic')),
                ('google_civic_office_name3', models.CharField(max_length=255, null=True, verbose_name='office name exactly as received from google civic')),
                ('google_civic_office_name4', models.CharField(max_length=255, null=True, verbose_name='office name exactly as received from google civic')),
                ('google_civic_office_name5', models.CharField(max_length=255, null=True, verbose_name='office name exactly as received from google civic')),
                ('google_civic_election_id', models.CharField(db_index=True, max_length=255, verbose_name='google civic election id')),
                ('google_ballot_placement', models.BigIntegerField(blank=True, null=True, verbose_name='the order this item should appear on the ballot')),
                ('state_code', models.CharField(blank=True, db_index=True, max_length=2, null=True, verbose_name='state this office serves')),
                ('google_civic_election_id_new', models.PositiveIntegerField(default=0, verbose_name='google civic election id')),
                ('ocd_division_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='ocd division id')),
                ('maplight_id', models.CharField(blank=True, db_index=True, max_length=255, null=True, unique=True)),
                ('vote_usa_office_id', models.CharField(blank=True, db_index=True, default=None, max_length=255, null=True)),
                ('ballotpedia_id', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('ballotpedia_election_id', models.PositiveIntegerField(blank=True, null=True, verbose_name='ballotpedia election id')),
                ('ballotpedia_is_marquee', models.BooleanField(default=None, null=True)),
                ('is_battleground_race', models.BooleanField(default=None, null=True)),
                ('is_ballotpedia_general_election', models.BooleanField(default=False)),
                ('is_ballotpedia_general_runoff_election', models.BooleanField(default=False)),
                ('is_ballotpedia_primary_election', models.BooleanField(default=False)),
                ('is_ballotpedia_primary_runoff_election', models.BooleanField(default=False)),
                ('ballotpedia_office_id', models.PositiveIntegerField(blank=True, db_index=True, null=True)),
                ('ballotpedia_office_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='office name exactly as received from ballotpedia')),
                ('ballotpedia_office_url', models.URLField(blank=True, max_length=255, null=True, verbose_name='url of office on ballotpedia')),
                ('ballotpedia_race_url', models.URLField(blank=True, max_length=255, null=True, verbose_name='url of race on ballotpedia')),
                ('ballotpedia_district_id', models.PositiveIntegerField(blank=True, null=True, verbose_name='ballotpedia district id')),
                ('ballotpedia_race_id', models.PositiveIntegerField(blank=True, db_index=True, null=True)),
                ('ballotpedia_race_office_level', models.CharField(blank=True, max_length=255, null=True, verbose_name='race office level')),
                ('wikipedia_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='wikipedia unique identifier')),
                ('number_voting_for', models.CharField(blank=True, max_length=255, null=True, verbose_name='google civic number of candidates to vote for')),
                ('number_elected', models.CharField(blank=True, max_length=255, null=True, verbose_name='google civic number of candidates who will be elected')),
                ('primary_party', models.CharField(blank=True, max_length=255, null=True, verbose_name='google civic primary party')),
                ('district_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='district name')),
                ('district_scope', models.CharField(blank=True, max_length=255, null=True, verbose_name='google civic district scope')),
                ('district_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='google civic district id')),
                ('contest_level0', models.CharField(blank=True, max_length=255, null=True, verbose_name='google civic level, option 0')),
                ('contest_level1', models.CharField(blank=True, max_length=255, null=True, verbose_name='google civic level, option 1')),
                ('contest_level2', models.CharField(blank=True, max_length=255, null=True, verbose_name='google civic level, option 2')),
                ('electorate_specifications', models.CharField(blank=True, max_length=255, null=True, verbose_name='google civic primary party')),
                ('special', models.CharField(blank=True, max_length=255, null=True, verbose_name='google civic primary party')),
                ('ctcl_uuid', models.CharField(blank=True, db_index=True, max_length=36, null=True)),
                ('elected_office_name', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='name of the elected office')),
            ],
        ),
        migrations.CreateModel(
            name='ContestOfficesAreNotDuplicates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contest_office1_we_vote_id', models.CharField(max_length=255, null=True, verbose_name='first contest office we are tracking')),
                ('contest_office2_we_vote_id', models.CharField(max_length=255, null=True, verbose_name='second contest office we are tracking')),
            ],
        ),
        migrations.CreateModel(
            name='ContestOfficeVisitingOtherElection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contest_office_we_vote_id', models.CharField(max_length=255, null=True, verbose_name='contest office we are tracking')),
                ('ballotpedia_race_id', models.PositiveIntegerField(blank=True, null=True, verbose_name='ballotpedia integer id')),
                ('host_google_civic_election_id', models.PositiveIntegerField(default=0, verbose_name='google civic election id of election the office is visiting')),
                ('origin_google_civic_election_id', models.PositiveIntegerField(default=0, verbose_name='google civic election id where the office first originated')),
            ],
        ),
    ]
