# Generated by Django 3.2.13 on 2022-06-10 23:54

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ContestMeasure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('we_vote_id', models.CharField(blank=True, db_index=True, default=None, max_length=255, null=True, unique=True, verbose_name='we vote permanent id')),
                ('maplight_id', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('vote_smart_id', models.CharField(blank=True, db_index=True, max_length=200, null=True)),
                ('measure_title', models.CharField(max_length=255, verbose_name='measure title')),
                ('date_last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('google_civic_measure_title', models.CharField(blank=True, max_length=255, null=True, verbose_name='measure name exactly as received from google civic')),
                ('google_civic_measure_title2', models.CharField(blank=True, max_length=255, null=True, verbose_name='measure name from google civic alternative')),
                ('google_civic_measure_title3', models.CharField(blank=True, max_length=255, null=True, verbose_name='measure name from google civic alternative')),
                ('google_civic_measure_title4', models.CharField(blank=True, max_length=255, null=True, verbose_name='measure name from google civic alternative')),
                ('google_civic_measure_title5', models.CharField(blank=True, max_length=255, null=True, verbose_name='measure name from google civic alternative')),
                ('measure_subtitle', models.TextField(blank=True, default='', null=True, verbose_name='google civic referendum subtitle')),
                ('measure_text', models.TextField(null=True, verbose_name='measure text')),
                ('measure_url', models.CharField(max_length=255, null=True, verbose_name='measure details url')),
                ('google_ballot_placement', models.BigIntegerField(blank=True, null=True, verbose_name='the order this item should appear on the ballot')),
                ('google_civic_election_id', models.CharField(blank=True, db_index=True, max_length=255, null=True, verbose_name='google civic election id')),
                ('google_civic_election_id_new', models.PositiveIntegerField(default=0, verbose_name='google civic election id new')),
                ('ocd_division_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='ocd division id')),
                ('primary_party', models.CharField(blank=True, max_length=255, null=True, verbose_name='primary party')),
                ('district_name', models.CharField(max_length=255, verbose_name='district name')),
                ('district_scope', models.CharField(max_length=255, verbose_name='district scope')),
                ('district_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='google civic district id')),
                ('measure_ultimate_election_date', models.PositiveIntegerField(default=None, null=True)),
                ('measure_year', models.PositiveIntegerField(default=None, null=True)),
                ('state_code', models.CharField(blank=True, db_index=True, max_length=2, null=True, verbose_name='state this measure affects')),
                ('election_day_text', models.CharField(blank=True, max_length=255, null=True, verbose_name='election day')),
                ('wikipedia_page_id', models.BigIntegerField(blank=True, null=True, verbose_name='pageid')),
                ('wikipedia_page_title', models.CharField(blank=True, max_length=255, null=True, verbose_name='Page title on Wikipedia')),
                ('wikipedia_photo_url', models.URLField(blank=True, max_length=255, null=True, verbose_name='url of wikipedia logo')),
                ('ballotpedia_district_id', models.PositiveIntegerField(default=0, verbose_name='ballotpedia district id')),
                ('ballotpedia_election_id', models.PositiveIntegerField(default=0, verbose_name='ballotpedia election id')),
                ('ballotpedia_measure_id', models.PositiveIntegerField(db_index=True, default=0)),
                ('ballotpedia_measure_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='ballotpedia measure name')),
                ('ballotpedia_measure_status', models.CharField(blank=True, max_length=255, null=True, verbose_name='ballotpedia measure status')),
                ('ballotpedia_measure_summary', models.TextField(blank=True, default='', null=True, verbose_name='ballotpedia measure summary')),
                ('ballotpedia_measure_text', models.TextField(blank=True, default='', null=True, verbose_name='ballotpedia measure text')),
                ('ballotpedia_measure_url', models.URLField(blank=True, max_length=255, null=True, verbose_name='ballotpedia url of measure')),
                ('ballotpedia_page_title', models.CharField(blank=True, max_length=255, null=True, verbose_name='Page title on Ballotpedia')),
                ('ballotpedia_photo_url', models.URLField(blank=True, max_length=255, null=True, verbose_name='url of ballotpedia logo')),
                ('ballotpedia_yes_vote_description', models.TextField(blank=True, default=None, null=True, verbose_name='what a yes vote means')),
                ('ballotpedia_no_vote_description', models.TextField(blank=True, default=None, null=True, verbose_name='what a no vote means')),
                ('ctcl_uuid', models.CharField(blank=True, db_index=True, max_length=36, null=True)),
                ('position_dates_set', models.BooleanField(default=False)),
                ('vote_usa_measure_id', models.CharField(db_index=True, default=None, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ContestMeasuresAreNotDuplicates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contest_measure1_we_vote_id', models.CharField(max_length=255, null=True, verbose_name='first contest measure we are tracking')),
                ('contest_measure2_we_vote_id', models.CharField(max_length=255, null=True, verbose_name='second contest measure we are tracking')),
            ],
        ),
        migrations.CreateModel(
            name='MeasureCampaign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('we_vote_id', models.CharField(blank=True, default=None, max_length=255, null=True, unique=True, verbose_name='we vote permanent id')),
                ('contest_measure_id', models.CharField(max_length=255, verbose_name='contest_measure unique id')),
                ('stance', models.CharField(choices=[('S', 'Support'), ('N', 'Neutral'), ('O', 'Oppose')], default='N', max_length=1, verbose_name='stance')),
                ('candidate_name', models.CharField(max_length=255, verbose_name='candidate name')),
                ('party', models.CharField(blank=True, max_length=255, null=True, verbose_name='party')),
                ('photo_url', models.CharField(blank=True, max_length=255, null=True, verbose_name='photoUrl')),
                ('google_civic_election_id', models.CharField(max_length=255, verbose_name='google election id')),
                ('google_civic_election_id_new', models.PositiveIntegerField(default=0, verbose_name='google election id')),
                ('url', models.URLField(blank=True, max_length=255, null=True, verbose_name='website url of campaign')),
                ('facebook_url', models.URLField(blank=True, null=True, verbose_name='facebook url of campaign')),
                ('twitter_url', models.URLField(blank=True, null=True, verbose_name='twitter url of campaign')),
                ('google_plus_url', models.URLField(blank=True, null=True, verbose_name='google plus url of campaign')),
                ('youtube_url', models.URLField(blank=True, null=True, verbose_name='youtube url of campaign')),
                ('measure_email', models.CharField(blank=True, max_length=255, null=True, verbose_name='measure email')),
                ('measure_phone', models.CharField(blank=True, max_length=255, null=True, verbose_name='measure phone')),
            ],
        ),
    ]
